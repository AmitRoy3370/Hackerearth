import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.PriorityQueue;
import java.util.Vector;

 class TestCase {

    static int n;
    
    static boolean visited[];
    
    static BufferedReader in=new BufferedReader( new InputStreamReader( System.in ) );
    
    static Vector<Integer> vector=new Vector<>();
    
    static void initialize(){
        
        visited[0]=visited[1]=true;
        
        for(int i=2;i*i<=n;i++){
            
            if( !visited[i] ){
                
                for(int j=i*i;j<=n;j+=i){
                    
                    try{
                    
                    visited[j]=true;
                    
                    }catch(Exception e){
                        
                        
                    }
                    
                }
                
            }
            
        }
        
        for(int i=2;i<n;i++){
            
            if( !visited[i] ){
                
                if( n%i!=0 ){
                
                vector.add(i);
                
                }
                
            }
            
        }
        
    }
    
    static class number implements Comparable<number>{
        
        int a;

        public number(int a) {
            this.a = a;
        }

        @Override
        public String toString() {

            return  a+"" ;

        }

        @Override
        public int compareTo(number t) {
        //    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        
        if( this.a>t.a ){
            
            return 1;
            
        }else if( this.a<t.a ){
            
            return -1;
            
        }
        
        return 0;
        
        }
        
    }
    
    static PriorityQueue<number> pq=new PriorityQueue<>();
    
    public static void main(String[] args) throws IOException {
        
        n=Integer.parseInt(in.readLine());
       
        //n=n-1;
        
 if( n%2!=0 ){
            
            System.out.println(n-2);
            
            System.exit(0);
            
        }

        visited=new boolean[n];
       
        initialize();
        
       for(int i: vector){
           
           try{
           
           pq.add( new number( i ) );
           
           }catch(Exception e){
               
               
           }
           
       }
        
        /*System.out.println("pq element's: ");
       
        for(number i: pq){
            
            System.out.println(i.toString());
            
        }*/
        
       try{
       
        number t=pq.poll();
        
        //n++;
        
        System.out.println( n-t.a );
        
       }catch(Exception e){
           
       //    System.out.println("size: "+vector.size());
           
       }
        
    }
    
}
