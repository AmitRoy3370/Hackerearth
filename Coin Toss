import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigInteger;

 class TestCase {

    static long testCases,n;
    
    static BufferedReader in=new BufferedReader( new InputStreamReader( System.in ) );
    
    static BigInteger mod=BigInteger.valueOf(10).pow(9).add(BigInteger.valueOf(7));
    
    static long[][] mul(long a[][],long b[][]){
        
        //System.out.println("I am mul");
        
        long l[][]=new long[4][4];
        
        for(int i=1;i<=3;i++){
            
            for(int j=1;j<=3;j++){
                
                long x=0;               
                
                for(int k=1;k<=3;k++){
                    
                    x=(x+a[i][k]*b[k][j] )%mod.longValue();
                    
                }
                
                  l[i][j]=x;
                
            }
            
        }
        
        for(int i=1;i<=3;i++){
            
            for(int j=1;j<=3;j++){
                
                a[i][j]=l[i][j];
                
            }
            
        }
        
       /* System.out.println("a here: ");
        
        for(int i=0;i<4;i++){
            
            for(int j=0;j<4;j++){
                
                System.out.print(a[i][j]+"  ");
                
            }
            
            System.out.println();
            
        }*/
        
        return a;
        
    }
    
    static void solve(long n){
        
        long l[][]=new long[4][4];
        
        long a[][]=new long[4][4];
        
        for(int i=1;i<=3;i++){
            
            l[i][i]=1;
            
        }
        
        a[1][1]=a[2][1]=a[3][1]=1;
        
        a[1][2]=a[2][3]=1;
        
        if( n==1 ){
            
            System.out.println("2");
            
            return;
            
        }else if(n==2){
            
            System.out.println("4");
            
            return;
            
        }else if(n==3){
            
            System.out.println("7");
            
            return;
            
        }
        
        n=n-3;
        
        while( n>=1 ){
            
            if( n%2==1 ){
                
      l= mul(l,a);        
                
                n--;
                
            }
            
          a= mul(a,a);
            
            n/=2;
            
        }
        
        long k=(7*l[1][1]%mod.longValue()+4*l[2][1]%mod.longValue()+2*l[3][1]%mod.longValue())%mod.longValue();
        
        System.out.println(k);
        
      /*  System.out.println("l matrix are: ");
        
        for(int i=0;i<4;i++){
            
            for(int j=0;j<4;j++){
                
                System.out.print(l[i][j]+"    ");
                
            }
            
            System.out.println();
            
        }*/
        
    }
    
    public static void main(String[] args) throws IOException {
        
        testCases=Long.parseLong( in.readLine() );
        
        for(long i=0;i<testCases;i++){
            
            n=Long.parseLong( in.readLine() );
            
            solve(n);
            
        }
        
    }
    
}
/*

2
5
4

*/
