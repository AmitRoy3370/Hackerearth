/* IMPORTANT: Multiple classes and nested static classes are supported */


// * uncomment this if you want to read input.
//imports for BufferedReader
import java.io.BufferedReader;
import java.io.InputStreamReader;

//import for Scanner and other utility classes
import java.util.*;

// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail

class TestClass {
    
static BufferedReader in=new BufferedReader( new InputStreamReader( System.in ) );

static int testCases,w;

static int []coins={2,3,5,7};

static void solve(int amount){

if(  coins.length==0 ){
            
System.out.println(-1);

            return;
            
        }
        
        if( coins.length==1 && amount%coins[0]!=0 ){
            
System.out.println(-1);

            return;
            
        }
        
if( amount==1 ){

System.out.println(-1);

return;

}

       /* int y=0;
        
        for(int i=0;i<coins.length;i++){
            
            if( coins[i]>=amount ){
                
                y=1;
                
            }
            
        }
        
        if( y==0 ){
            
            return -1;
            
        }*/
        
        //Arrays.sort(coins);
        
        long mat[][]=new long[ coins.length+1 ][ amount+1 ];
        
        /*for(int i=1;i<=amount;i++){
            
           if( i%coins[0]==0 ){
               
               mat[0][i]=i/coins[0];
               
           }
            
        }*/
        
        int n=coins.length;
        
        for(int i=0;i<=n;i++ ){
            
            for(int j=0;j<=amount;j++){
                
                if( j==0 ){
                    
                    mat[i][j]=0;
                    
                }else if( i==0 ){
                    
                    mat[i][j]=Integer.MAX_VALUE;
                    
                }
                
               else if( coins[i-1]>j ){
                    
                    mat[i][j]=mat[i-1][j];
                    
                }else{
                    
                    mat[i][j]=Math.min( mat[i-1][j],mat[ i ][ Math.abs( j-coins[i-1] ) ]+ 1 );
                    
                }
                
            }
            
        }
        
       /* System.out.println("The matrix is: ");
        
        for(int i=0;i<coins.length;i++){
            
            for(int j=0;j<=amount;j++){
                
                System.out.print(mat[i][j]+"  ");
                
            }
            
            System.out.println();
            
        }*/
        
     /*   if( mat[ coins.length-1 ][ amount ]==0 ){
            
            return -1;
            
        }else*/
        
        if( mat[ n ][ amount ]>Integer.MAX_VALUE ){
            
            System.out.println(-1);
            
return;

        }
        
        System.out.println( mat[ coins.length ][amount] );

}

    public static void main(String args[] ) throws Exception {
        
testCases=Integer.parseInt(in.readLine());

for(int i=0;i<testCases;i++){

w=Integer.parseInt( in.readLine() );

solve(w);

}

    }
}
